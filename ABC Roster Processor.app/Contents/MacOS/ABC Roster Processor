#!/bin/bash

# ABC Advertising Roster & Schedule Processor
# macOS Application Bundle Launcher

# Get the directory where this app bundle is located (the ABC_Advertising folder)
# Script is at: ABC_Advertising/ABC Roster Processor.app/Contents/MacOS/ABC Roster Processor
# We need to go to: ABC_Advertising
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../../.." && pwd)"

# Change to the project directory
cd "$PROJECT_DIR"

# Check if Python is available
if ! command -v python3 &> /dev/null; then
    if ! command -v python &> /dev/null; then
        osascript -e 'display dialog "Python not found. Please install Python to run this application." buttons {"OK"} default button "OK"'
        exit 1
    else
        PYTHON_CMD="python"
    fi
else
    PYTHON_CMD="python3"
fi

# Check if import folder exists
if [ ! -d "import" ]; then
    mkdir -p import
fi

# Count PDF and image files
FILE_COUNT=0
if [ -d "import" ]; then
    for file in import/*.pdf import/*.png import/*.jpg import/*.jpeg import/*.bmp import/*.tiff import/*.gif; do
        if [ -f "$file" ]; then
            FILE_COUNT=$((FILE_COUNT + 1))
        fi
    done
fi

if [ $FILE_COUNT -eq 0 ]; then
    osascript -e 'display dialog "No PDF or image files found in the import folder. Please add roster or schedule files to the import folder and try again." buttons {"OK"} default button "OK"'
    exit 1
fi

# Show processing dialog
osascript -e 'display dialog "Found '$FILE_COUNT' file(s) to process. Click OK to start processing rosters and schedules." buttons {"Cancel", "Process"} default button "Process"'

if [ $? -ne 0 ]; then
    exit 0
fi

# Run the Python script
echo "Starting ABC Advertising Roster & Schedule Processor..."
echo "Processing $FILE_COUNT file(s)..."

# Check if main.py exists
if [ ! -f "main.py" ]; then
    osascript -e 'display dialog "main.py not found in current directory" buttons {"OK"} default button "OK"'
    exit 1
fi

# Try to install dependencies first
$PYTHON_CMD -m pip install pdfplumber openai python-dotenv pytesseract Pillow --quiet

# Run the Python script
$PYTHON_CMD main.py

# Read the count of files created in this run from the .file_count file
OUTPUT_COUNT=0
if [ -f ".file_count" ]; then
    OUTPUT_COUNT=$(cat .file_count)
    rm .file_count
fi

# Show results
if [ $OUTPUT_COUNT -gt 0 ]; then
    osascript -e 'display dialog "Processing complete! Created '$OUTPUT_COUNT' InDesign file(s) in the in_design_output folder." buttons {"OK"} default button "OK"'
    # Open the output folder
    open in_design_output
else
    osascript -e 'display dialog "No output files created. Check if PDFs were processed correctly." buttons {"OK"} default button "OK"'
fi